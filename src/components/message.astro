---
import "../styles/message.css";
---

<link
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
  rel="stylesheet"
/>

<div class="chat-container hidden" id="chat-box">
  <div class="chat-header">
    <p style="margin: 0;">BROSMEDIA Assistant IA</p>
  </div>

  <div class="chat-body" id="chatBody">
    <div class="message-row receiver">
      <div class="message-bubble">
        Bonjour! Je suis l'assistant IA de Brosmedia. ü§ñ<br />
        Comment puis-je vous aider aujourd'hui?
        <div class="quick-replies">
          <div class="quick-reply" data-reply="Services">Nos services</div>
          <div class="quick-reply" data-reply="Prix">Tarifs</div>
          <div class="quick-reply" data-reply="Portfolio">Nos r√©alisations</div>
          <div class="quick-reply" data-reply="Contact">Contact humain</div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const chatBox = document.getElementById("chat-box");
    const closeChat = document.getElementById("closeChat");
    const chatBody = document.getElementById("chatBody");
    // const chatMessage = document.getElementById("chatMessage");
    const sendBtn = document.getElementById("sendBtn");
    const micIcon = document.getElementById("micIcon");
    const fileIcon = document.getElementById("fileIcon");
    const chatBtn = document.getElementById("chat-button");

    // AI Responses with more natural language
    const AI_RESPONSES = {
      greeting: [
        "Bonjour ! Je suis l'assistant IA de Brosmedia. ü§ñ Comment puis-je vous aider aujourd'hui?",
        "Salut ! üëã Ravie de vous rencontrer. Je suis l√† pour r√©pondre √† toutes vos questions sur nos services de communication et web marketing.",
      ],
      services: `Chez Brosmedia, nous offrons une gamme compl√®te de services pour booster votre pr√©sence en ligne :
<br>
‚Ä¢ üñ•Ô∏è <strong>Cr√©ation de sites web</strong> - Des sites modernes, responsives et sur mesure<br>
‚Ä¢ üìä <strong>Marketing digital</strong> - Strat√©gies personnalis√©es pour maximiser votre visibilit√©<br>
‚Ä¢ üîç <strong>R√©f√©rencement SEO</strong> - Optimisation pour am√©liorer votre classement sur Google<br>
‚Ä¢ üì± <strong>Gestion des r√©seaux sociaux</strong> - Content engaging et community management<br>
‚Ä¢ üé® <strong>Design graphique</strong> - Identit√© visuelle qui marque les esprits<br>`,
      pricing: `Nos tarifs sont adapt√©s √† chaque projet et √† chaque budget :<br>

‚Ä¢ <strong>Site vitrine</strong> : √Ä partir de 4 000 MAD<br>
‚Ä¢ <strong>Site e-commerce</strong> : √Ä partir de 8 000 MAD<br>
‚Ä¢ <strong>R√©f√©rencement SEO</strong> : Forfaits √† partir de 2 500 MAD/mois<br>
‚Ä¢ <strong>Campagnes marketing</strong> : Sur devis personnalis√©<br>`,

      portfolio: `Nous avons eu le plaisir de travailler sur divers projets passionnants :<br>

‚Ä¢ Site e-commerce pour une marque de mode marocaine<br>
‚Ä¢ Refonte compl√®te du site vitrine d'un restaurant r√©put√© √† Larache<br>
‚Ä¢ Campagne Instagram pour un salon de beaut√© de luxe<br>
‚Ä¢ Strat√©gie SEO pour une agence immobili√®re √† Tanger<br>

Je vous invite √† d√©couvrir l'ensemble de nos r√©alisations sur https://brosmedia.ma/portfolio`,
      contact:
        "Excellent! Un de nos experts vous contactera dans les plus brefs d√©lais. üòä",
      default: [
        "Je ne suis pas s√ªr de comprendre. Pourriez-vous reformuler votre question?",
        "C'est une bonne question! Laissez-moi vous mettre en contact avec un expert humain qui pourra vous aider.",
        "Je suis encore en apprentissage. Pourriez-vous essayer de formuler votre demande autrement?",
      ],
    };

    // Services list
    const SERVICES = [
      "Cr√©ation de site web",
      "Design graphique",
      "Marketing digital",
      "Maintenance technique",
      "Formation en ligne",
      "Autres",
    ];

    if (chatBtn) {
      chatBtn.addEventListener("click", (e) => {
        e.preventDefault();
        chatBox.classList.toggle("hidden");
      });
    }

    // Add message to chat
    function addMessage(text, sender) {
      const messageRow = document.createElement("div");
      messageRow.classList.add("message-row");
      messageRow.classList.add(sender === "user" ? "sender" : "receiver");

      const messageBubble = document.createElement("div");
      messageBubble.classList.add("message-bubble");

      // Check if the text contains HTML tags
      if (/<[a-z][\s\S]*>/i.test(text)) {
        messageBubble.innerHTML = text;
      } else {
        messageBubble.textContent = text;
      }

      messageRow.appendChild(messageBubble);
      chatBody.appendChild(messageRow);

      // Scroll to bottom
      chatBody.scrollTop = chatBody.scrollHeight;
    }

    // Show typing indicator
    function showTypingIndicator() {
      const typingRow = document.createElement("div");
      typingRow.classList.add("message-row");
      typingRow.classList.add("receiver");
      typingRow.id = "typingIndicator";

      const typingBubble = document.createElement("div");
      typingBubble.classList.add("typing-indicator");

      for (let i = 0; i < 3; i++) {
        const dot = document.createElement("div");
        dot.classList.add("typing-dot");
        typingBubble.appendChild(dot);
      }

      typingRow.appendChild(typingBubble);
      chatBody.appendChild(typingRow);

      // Scroll to bottom
      chatBody.scrollTop = chatBody.scrollHeight;
    }

    // Remove typing indicator
    function removeTypingIndicator() {
      const typingIndicator = document.getElementById("typingIndicator");
      if (typingIndicator) {
        typingIndicator.remove();
      }
    }

    // AI Response logic
    function aiResponse(userMessage) {
      const lowerMessage = userMessage.toLowerCase();
      let response = "";

      if (
        lowerMessage.includes("bonjour") ||
        lowerMessage.includes("salut") ||
        lowerMessage.includes("hello") ||
        lowerMessage.includes("coucou")
      ) {
        response =
          AI_RESPONSES.greeting[
            Math.floor(Math.random() * AI_RESPONSES.greeting.length)
          ];
      } else if (
        lowerMessage.includes("service") ||
        lowerMessage.includes("offre") ||
        lowerMessage.includes("quoi") ||
        lowerMessage.includes("propos")
      ) {
        response = AI_RESPONSES.services;
      } else if (
        lowerMessage.includes("prix") ||
        lowerMessage.includes("tarif") ||
        lowerMessage.includes("combien") ||
        lowerMessage.includes("co√ªt") ||
        lowerMessage.includes("budget")
      ) {
        response = AI_RESPONSES.pricing;
      } else if (
        lowerMessage.includes("portfolio") ||
        lowerMessage.includes("r√©alisation") ||
        lowerMessage.includes("projet") ||
        lowerMessage.includes("travail") ||
        lowerMessage.includes("exp√©rience")
      ) {
        response = AI_RESPONSES.portfolio;
      } else if (
        lowerMessage.includes("contact") ||
        lowerMessage.includes("email") ||
        lowerMessage.includes("t√©l√©phone") ||
        lowerMessage.includes("adresse") ||
        lowerMessage.includes("appeler") ||
        lowerMessage.includes("humain") ||
        lowerMessage.includes("expert")
      ) {
        showContactForm();
      } else {
        response =
          AI_RESPONSES.default[
            Math.floor(Math.random() * AI_RESPONSES.default.length)
          ];
      }

      addMessage(response, "ai");

      // Add quick replies after AI response
      if (
        !lowerMessage.includes("contact") &&
        !lowerMessage.includes("humain") &&
        !lowerMessage.includes("expert")
      ) {
        setTimeout(addQuickReplies, 300);
      }
    }

    // Show contact form
    function showContactForm() {
      const contactForm = document.createElement("div");
      contactForm.classList.add("contact-form");

      addMessage(
        "Parfait! Je vais vous mettre en contact avec un expert Brosmedia. Pourriez-vous me fournir quelques d√©tails?",
        "ai",
      );

      contactForm.innerHTML = `
                    <h3>Contactez un expert</h3>
                    <div class="form-group">
                        <label for="userQuestion">Votre question</label>
                        <textarea id="userQuestion" placeholder D√©crivez votre projet ou posez votre question..." rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label>Service concern√©</label>
                        <div class="service-tags">
                            ${SERVICES.map(
                              (service) =>
                                `<div class="service-tag" data-service="${service}">${service}</div>`,
                            ).join("")}
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="userEmail">Votre email</label>
                        <input type="email" id="userEmail" placeholder="votre@email.com">
                    </div>
                    <div class="form-buttons">
                        <button class="cancel-btn" id="cancelContact">Annuler</button>
                        <button class="submit-btn" id="submitContact">Envoyer</button>
                    </div>
                `;

      chatBody.appendChild(contactForm);

      // Add event listeners
      document
        .getElementById("cancelContact")
        .addEventListener("click", function () {
          contactForm.remove();
        });

      document.querySelectorAll(".service-tag").forEach((tag) => {
        tag.addEventListener("click", function () {
          document
            .querySelectorAll(".service-tag")
            .forEach((t) => t.classList.remove("selected"));
          this.classList.add("selected");
        });
      });

      

      document
        .getElementById("submitContact")
        .addEventListener("click", async function () {
          const question = document.getElementById("userQuestion").value;
          const service =
            document.querySelector(".service-tag.selected")?.dataset.service ||
            "Non sp√©cifi√©";
          const email = document.getElementById("userEmail").value;

          if (!question || !email) {
            alert("Veuillez remplir tous les champs obligatoires.");
            return;
          }

          // Create form data
          const formData = new FormData();
          formData.append("question", question);
          formData.append("service", service);
          formData.append("email", email);

          try {
            // Send data to server
            const response = await fetch("http://localhost:3000/send-message", {
              method: "POST",
              body: formData,
            });

            if (response.ok) {
              // Show confirmation
              addMessage(
                "Merci! Votre demande a √©t√© envoy√©e. Un expert Brosmedia vous contactera tr√®s bient√¥t.",
                "ai",
              );

              // Remove form
              contactForm.remove();
            } else {
              throw new Error("Erreur lors de l'envoi du message");
            }
          } catch (error) {
            console.error("Error:", error);
            addMessage(
              "D√©sol√©, une erreur s'est produite lors de l'envoi de votre message. Veuillez r√©essayer.",
              "ai",
            );
          }
        });

      // Scroll to bottom
      chatBody.scrollTop = chatBody.scrollHeight;
    }

    // Quick replies
    const quickReplies = [
      "Nos services",
      "Tarifs",
      "Portfolio",
      "Contact humain",
    ];

    // Add quick replies
    function addQuickReplies() {
      const quickReplyContainer = document.createElement("div");
      quickReplyContainer.classList.add("quick-replies");

      quickReplies.forEach((reply) => {
        const quickReply = document.createElement("div");
        quickReply.classList.add("quick-reply");
        quickReply.textContent = reply;
        quickReply.addEventListener("click", function () {
          addMessage(reply, "user");
          showTypingIndicator();
          setTimeout(() => {
            removeTypingIndicator();
            aiResponse(reply);
          }, 1500);
        });

        quickReplyContainer.appendChild(quickReply);
      });

      const lastMessage = chatBody.lastElementChild;
      lastMessage.appendChild(quickReplyContainer);

      // Scroll to bottom
      chatBody.scrollTop = chatBody.scrollHeight;
    }

    // Add event listeners for quick replies in the initial message
    document.querySelectorAll(".quick-reply").forEach((reply) => {
      reply.addEventListener("click", function () {
        const replyText = this.dataset.reply;
        addMessage(replyText, "user");
        showTypingIndicator();
        setTimeout(() => {
          removeTypingIndicator();
          aiResponse(replyText);
        }, 1000);
      });
    });

   
  });
</script>
